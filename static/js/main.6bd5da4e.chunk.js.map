{"version":3,"sources":["Components/Japanese.js","Components/Moroccan.js","Components/Burundi.js","Components/DrumOff.js","Components/Display.js","Components/PowerButton.js","Components/DrumType.js","App.js","serviceWorker.js","index.js"],"names":["Japanese","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePress","bind","assertThisInitialized","state","country","drumList","name","src","key","keyCode","inherits","createClass","value","event","includes","addPressAnimation","audio","document","querySelector","concat","bangDrum","addEventListener","_this2","querySelectorAll","forEach","removeTransition","removeEventListener","react_default","a","createElement","className","map","createButtons","React","Component","Moroccan","Burundi","DrumOff","drum","Display","onClick","addClickAnimation","target","classList","remove","id","data-key","getElementById","drumKit","burundi","Q","W","E","A","S","D","Z","X","C","japan","morocco","setInnerText","currentTime","play","add","code","81","87","69","65","83","68","90","88","67","changeBackground","Japanese_Japanese","text","Moroccan_Moroccan","Burundi_Burundi","DrumOff_DrumOff","PowerButton","apply","arguments","type","handleToggle","DrumType","power","handleCountry","toUpperCase","App","prevCountry","setState","previous","countryClass","body","Display_Display","PowerButton_PowerButton","DrumType_DrumType","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOAEaA,EAAb,SAAAC,GACE,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACjBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KACDQ,YAAYP,EAAKO,YAAYC,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACjBA,EAAKU,MAAM,CAACC,QAAS,QAASC,SAAU,CACtC,CAACD,QAAS,QAASE,KAAM,WAAYC,IAAK,qGAAsGC,IAAK,IAAKC,QAAQ,MAClK,CAACL,QAAS,QAASE,KAAM,WAAYC,IAAK,oGAAqGC,IAAK,IAAKC,QAAQ,MACjK,CAACL,QAAS,QAASE,KAAM,SAAUC,IAAK,0GAA2GC,IAAK,IAAKC,QAAQ,MACrK,CAACL,QAAS,QAASE,KAAM,YAAaC,IAAK,yGAA0GC,IAAK,IAAKC,QAAQ,MACvK,CAACL,QAAS,QAASE,KAAM,YAAaC,IAAK,2GAA4GC,IAAK,IAAKC,QAAQ,MACzK,CAACL,QAAS,QAASE,KAAM,QAASC,IAAK,sGAAuGC,IAAK,IAAKC,QAAQ,MAChK,CAACL,QAAS,QAASE,KAAM,QAASC,IAAK,mGAAoGC,IAAK,IAAKC,QAAQ,MAC7J,CAACL,QAAS,QAASE,KAAM,UAAWC,IAAK,kGAAmGC,IAAK,IAAKC,QAAQ,MAC9J,CAACL,QAAS,QAASE,KAAM,QAASC,IAAK,qGAAsGC,IAAK,IAAKC,QAAQ,QAZhJhB,EADrB,OAAAC,OAAAgB,EAAA,EAAAhB,CAAAJ,EAAAC,GAAAG,OAAAiB,EAAA,EAAAjB,CAAAJ,EAAA,EAAAkB,IAAA,cAAAI,MAAA,SAkBcR,EAASS,GAEnB,GADiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzCC,SAASD,EAAMJ,SAAU,CACpCb,KAAKJ,MAAMuB,kBAAkBF,GAC7B,IAAIG,EAAQC,SAASC,cAAT,mBAAAC,OAA0CN,EAAMJ,QAAhD,OACZb,KAAKJ,MAAM4B,SAASJ,EAAOZ,MAvBjC,CAAAI,IAAA,qBAAAI,MAAA,WA6BIK,SAASI,iBAAiB,UAAWzB,KAAKI,YAAYC,KAAKL,KAAMA,KAAKO,MAAMC,YA7BhF,CAAAI,IAAA,oBAAAI,MAAA,WAiCsB,IAAAU,EAAA1B,KACPqB,SAASM,iBAAiB,aAChCC,QAAQ,SAAAhB,GAAG,OAAIA,EAAIa,iBAAiB,gBAAiBC,EAAK9B,MAAMiC,sBAnCzE,CAAAjB,IAAA,uBAAAI,MAAA,WAuCIK,SAASS,oBAAoB,UAAW9B,KAAKI,eAvCjD,CAAAQ,IAAA,SAAAI,MAAA,WA6CI,OACAe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACZlC,KAAKO,MAAME,SAAS0B,IAAInC,KAAKJ,MAAMwC,oBA/C1C1C,EAAA,CAA8B2C,IAAMC,WCAvBC,EAAb,SAAA5C,GACE,SAAA4C,EAAY3C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,IACjB1C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyC,GAAApC,KAAAH,KAAMJ,KACDQ,YAAYP,EAAKO,YAAYC,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACjBA,EAAKU,MAAM,CAACC,QAAS,UAAWC,SAAU,CACxC,CAACD,QAAS,UAAWE,KAAM,aAAcC,IAAK,uHAAwHC,IAAK,IAAKC,QAAS,MACzL,CAACL,QAAS,UAAWE,KAAM,OAAQC,IAAK,wHAAyHC,IAAK,IAAKC,QAAQ,MACnL,CAACL,QAAS,UAAWE,KAAM,OAAQC,IAAK,qHAAsHC,IAAK,IAAKC,QAAQ,MAChL,CAACL,QAAS,UAAWE,KAAM,WAAYC,IAAK,wHAAyHC,IAAK,IAAKC,QAAQ,MACvL,CAACL,QAAS,UAAWE,KAAM,UAAWC,IAAK,iHAAkHC,IAAK,IAAKC,QAAQ,MAC/K,CAACL,QAAS,UAAWE,KAAM,UAAWC,IAAK,uHAAwHC,IAAK,IAAKC,QAAQ,MACrL,CAACL,QAAS,UAAWE,KAAM,MAAOC,IAAK,uHAAwHC,IAAK,IAAKC,QAAQ,MACjL,CAACL,QAAS,UAAWE,KAAM,MAAOC,IAAK,uHAAwHC,IAAK,IAAKC,QAAQ,MACjL,CAACL,QAAS,UAAWE,KAAM,UAAWC,IAAK,yHAA0HC,IAAK,IAAKC,QAAQ,QAZxKhB,EADrB,OAAAC,OAAAgB,EAAA,EAAAhB,CAAAyC,EAAA5C,GAAAG,OAAAiB,EAAA,EAAAjB,CAAAyC,EAAA,EAAA3B,IAAA,qBAAAI,MAAA,WAiBIK,SAASI,iBAAiB,UAAWzB,KAAKI,YAAYC,KAAKL,KAAMA,KAAKO,MAAMC,YAjBhF,CAAAI,IAAA,oBAAAI,MAAA,WAqBsB,IAAAU,EAAA1B,KACPqB,SAASM,iBAAiB,aAChCC,QAAQ,SAAAhB,GAAG,OAAIA,EAAIa,iBAAiB,gBAAiBC,EAAK9B,MAAMiC,sBAvBzE,CAAAjB,IAAA,uBAAAI,MAAA,WA2BIK,SAASS,oBAAoB,UAAW9B,KAAKI,eA3BjD,CAAAQ,IAAA,cAAAI,MAAA,SA+BcR,EAASS,GAEpB,GADiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzCC,SAASD,EAAMJ,SAAU,CACnCb,KAAKJ,MAAMuB,kBAAkBF,GAC9B,IAAIG,EAAQC,SAASC,cAAT,mBAAAC,OAA0CN,EAAMJ,QAAhD,OACZb,KAAKJ,MAAM4B,SAASJ,EAAOZ,MApChC,CAAAI,IAAA,SAAAI,MAAA,WA4CI,OACAe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACZlC,KAAKO,MAAME,SAAS0B,IAAInC,KAAKJ,MAAMwC,oBA9C1CG,EAAA,CAA8BF,IAAMC,WCAvBE,EAAb,SAAA7C,GACE,SAAA6C,EAAY5C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,IACjB3C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0C,GAAArC,KAAAH,KAAMJ,KACDQ,YAAcP,EAAKO,YAAYC,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACnBA,EAAKU,MAAM,CAACC,QAAS,UAAWC,SAAU,CACxC,CAACD,QAAS,UAAWE,KAAM,UAAWC,IAAK,iIAAkIC,IAAK,IAAKC,QAAQ,MAC/L,CAACL,QAAS,UAAWE,KAAM,UAAWC,IAAK,gIAAiIC,IAAK,IAAKC,QAAQ,MAC9L,CAACL,QAAS,UAAWE,KAAM,WAAYC,IAAK,gIAAiIC,IAAK,IAAKC,QAAQ,MAC/L,CAACL,QAAS,UAAWE,KAAM,WAAYC,IAAK,gIAAiIC,IAAK,IAAKC,QAAQ,MAC/L,CAACL,QAAS,UAAWE,KAAM,UAAWC,IAAK,+HAAgIC,IAAK,IAAKC,QAAQ,MAC7L,CAACL,QAAS,UAAWE,KAAM,UAAWC,IAAK,gIAAiIC,IAAK,IAAKC,QAAQ,MAC9L,CAACL,QAAS,UAAWE,KAAM,WAAYC,IAAK,iIAAkIC,IAAK,IAAKC,QAAQ,MAChM,CAACL,QAAS,UAAWE,KAAM,aAAcC,IAAK,sIAAuIC,IAAK,IAAKC,QAAQ,MACvM,CAACL,QAAS,UAAWE,KAAM,OAAQC,IAAK,6HAA8HC,IAAK,IAAKC,QAAQ,QAZzKhB,EADrB,OAAAC,OAAAgB,EAAA,EAAAhB,CAAA0C,EAAA7C,GAAAG,OAAAiB,EAAA,EAAAjB,CAAA0C,EAAA,EAAA5B,IAAA,cAAAI,MAAA,SAgBcR,EAASS,GAGpB,GADiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACrCC,SAASD,EAAMJ,SAAU,CACrCb,KAAKJ,MAAMuB,kBAAkBF,GAC5B,IAAIG,EAAQC,SAASC,cAAT,mBAAAC,OAA0CN,EAAMJ,QAAhD,OACZb,KAAKJ,MAAM4B,SAASJ,EAAOZ,MAtBhC,CAAAI,IAAA,qBAAAI,MAAA,WA2BIK,SAASI,iBAAiB,UAAWzB,KAAKI,YAAYC,KAAKL,KAAMA,KAAKO,MAAMC,YA3BhF,CAAAI,IAAA,oBAAAI,MAAA,WA+BsB,IAAAU,EAAA1B,KACPqB,SAASM,iBAAiB,aAChCC,QAAQ,SAAAhB,GAAG,OAAIA,EAAIa,iBAAiB,gBAAiBC,EAAK9B,MAAMiC,sBAjCzE,CAAAjB,IAAA,uBAAAI,MAAA,WAqCIK,SAASS,oBAAoB,UAAW9B,KAAKI,eArCjD,CAAAQ,IAAA,SAAAI,MAAA,WA2CI,OACAe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACblC,KAAKO,MAAME,SAAS0B,IAAInC,KAAKJ,MAAMwC,oBA7CzCI,EAAA,CAA6BH,IAAMC,WCAtBG,EAAb,SAAA9C,GACE,SAAA8C,EAAY7C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyC,IACjB5C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2C,GAAAtC,KAAAH,KAAMJ,KACDW,MAAM,CAACE,SAAU,CACpB,CAACG,IAAK,KAAK,CAACA,IAAK,KAAK,CAACA,IAAK,KAAK,CAACA,IAAK,KAAK,CAACA,IAAK,KAAK,CAACA,IAAK,KAAK,CAACA,IAAK,KAAK,CAACA,IAAK,KAAK,CAACA,IAAK,OAH/Ef,EADrB,OAAAC,OAAAgB,EAAA,EAAAhB,CAAA2C,EAAA9C,GAAAG,OAAAiB,EAAA,EAAAjB,CAAA2C,EAAA,EAAA7B,IAAA,gBAAAI,MAAA,SAQgB0B,GAAQ,OACpBX,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACjBQ,EAAK9B,OAVV,CAAAA,IAAA,SAAAI,MAAA,WAcI,OACAe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACblC,KAAKO,MAAME,SAAS0B,IAAInC,KAAKoC,oBAhBnCK,EAAA,CAA6BJ,IAAMC,WCItBK,EAAb,SAAAhD,GACE,SAAAgD,EAAY/C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,IACjB9C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6C,GAAAxC,KAAAH,KAAMJ,KACDwC,cAAgBvC,EAAKuC,cAAc/B,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACrBA,EAAK+C,QAAU/C,EAAK+C,QAAQvC,KAAbP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACfA,EAAK2B,SAAW3B,EAAK2B,SAASnB,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAChBA,EAAKgC,iBAAmBhC,EAAKgC,iBAAiBxB,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACxBA,EAAKgD,kBAAoBhD,EAAKgD,kBAAkBxC,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACzBA,EAAKsB,kBAAoBtB,EAAKsB,kBAAkBd,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAPRA,EADrB,OAAAC,OAAAgB,EAAA,EAAAhB,CAAA6C,EAAAhD,GAAAG,OAAAiB,EAAA,EAAAjB,CAAA6C,EAAA,EAAA/B,IAAA,mBAAAI,MAAA,SAYmBC,GACfA,EAAM6B,OAAOC,UAAUC,OAAO,WAC9B/B,EAAM6B,OAAOC,UAAUC,OAAO,aAdlC,CAAApC,IAAA,gBAAAI,MAAA,SAkBgB0B,GAAQ,OACpBX,EAAAC,EAAAC,cAAA,UAAQC,UAAS,YAAAX,OAAcmB,EAAKlC,SAAWQ,MAAO0B,EAAK9B,IAAKgC,QAAS5C,KAAK4C,QAAQvC,KAAKL,KAAM0C,EAAKlC,SAAUyC,GAAIP,EAAKhC,MACzHqB,EAAAC,EAAAC,cAAA,SAAOgB,GAAIP,EAAK9B,IAAKsC,WAAUR,EAAK7B,QACpCF,IAAK+B,EAAK/B,IAAKuB,UAAU,SAASQ,EAAK9B,OArB3C,CAAAA,IAAA,UAAAI,MAAA,SA0BUR,EAASS,GACfjB,KAAK6C,kBAAkB5B,GACvB,IAAIG,EAAQC,SAAS8B,eAAelC,EAAM6B,OAAO9B,OACjDhB,KAAKwB,SAASJ,EAAOZ,KA7BzB,CAAAI,IAAA,WAAAI,MAAA,SAkCWI,EAAOZ,GACd,IACI4C,EADW,CAACC,QAAQ,CAACC,EAAE,WAAYC,EAAE,WAAYC,EAAE,QAASC,EAAE,YAAYC,EAAE,WAAWC,EAAE,UAAUC,EAAE,YAAYC,EAAE,cAAcC,EAAE,QAAQC,MAAO,CAACT,EAAE,YAAaC,EAAE,eAAgBC,EAAE,SAAUC,EAAE,YAAYC,EAAE,aAAaC,EAAE,QAAQC,EAAE,QAAQC,EAAE,UAAUC,EAAE,SAAUE,QAAS,CAACV,EAAE,aAAcC,EAAE,OAAQC,EAAE,OAAQC,EAAE,YAAYC,EAAE,WAAWC,EAAE,WAAWC,EAAE,MAAMC,EAAE,MAAMC,EAAE,aAC9VtD,GACvBR,KAAKJ,MAAMqE,aAAab,EAAQhC,EAAM6B,KACtC7B,EAAM8C,YAAc,EACpB9C,EAAM+C,SAvCV,CAAAvD,IAAA,oBAAAI,MAAA,SA2CoBC,GACNI,SAASC,cAAT,iBAAAC,OAAwCN,EAAM6B,OAAO9B,MAArD,OACN+B,UAAUqB,IAAI,aA7CtB,CAAAxD,IAAA,oBAAAI,MAAA,SAiDoBC,GAChB,IAAIoD,EAAOpD,EAAMJ,QAEPQ,SAASC,cAAT,iBAAAC,OADM,CAAC+C,GAAI,IAAKC,GAAI,IAAKC,GAAG,IAAKC,GAAG,IAAKC,GAAG,IAAKC,GAAG,IAAKC,GAAG,IAAKC,GAAG,IAAKC,GAAG,KAC1BT,GAAlD,OACNtB,UAAUqB,IAAI,aArDtB,CAAAxD,IAAA,SAAAI,MAAA,WA4DQ,OADAhB,KAAKJ,MAAMmF,iBAAiB/E,KAAKJ,MAAMY,SACZ,UAAvBR,KAAKJ,MAAMY,QACNuB,EAAAC,EAAAC,cAAA,OAAKgB,GAAG,UAAUf,UAAU,aAC5BH,EAAAC,EAAAC,cAAC+C,EAAD,CAAU7D,kBAAmBnB,KAAKmB,kBAAmBU,iBAAkB7B,KAAK6B,iBAAkBoC,aAAcjE,KAAKiE,aAAc7B,cAAepC,KAAKoC,cAAeZ,SAAUxB,KAAKwB,WACjLO,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAA2BlC,KAAKJ,MAAMqF,OAE7B,YAAvBjF,KAAKJ,MAAMY,QACVuB,EAAAC,EAAAC,cAAA,OAAKgB,GAAG,UAAUf,UAAU,aAC5BH,EAAAC,EAAAC,cAACiD,EAAD,CAAU/D,kBAAmBnB,KAAKmB,kBAAmBU,iBAAkB7B,KAAK6B,iBAAkBoC,aAAcjE,KAAKiE,aAAc7B,cAAepC,KAAKoC,cAAeZ,SAAUxB,KAAKwB,WACjLO,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BAA6BlC,KAAKJ,MAAMqF,OAE/B,YAAvBjF,KAAKJ,MAAMY,QACVuB,EAAAC,EAAAC,cAAA,OAAKgB,GAAG,UAAUf,UAAU,aAC5BH,EAAAC,EAAAC,cAACkD,EAAD,CAAShE,kBAAmBnB,KAAKmB,kBAAmBU,iBAAkB7B,KAAK6B,iBAAkBoC,aAAcjE,KAAKiE,aAAc7B,cAAepC,KAAKoC,cAAeZ,SAAUxB,KAAKwB,WAChLO,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BAA6BlC,KAAKJ,MAAMqF,OAGvDlD,EAAAC,EAAAC,cAAA,OAAKgB,GAAG,UAAUf,UAAU,IAAIH,EAAAC,EAAAC,cAACmD,EAAD,MAAWrD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYlC,KAAKJ,MAAMqF,WA5E9FtC,EAAA,CAA6BN,IAAMC,WCJtB+C,EAAb,SAAA1F,GAAA,SAAA0F,IAAA,OAAAvF,OAAAC,EAAA,EAAAD,CAAAE,KAAAqF,GAAAvF,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuF,GAAAC,MAAAtF,KAAAuF,YAAA,OAAAzF,OAAAgB,EAAA,EAAAhB,CAAAuF,EAAA1F,GAAAG,OAAAiB,EAAA,EAAAjB,CAAAuF,EAAA,EAAAzE,IAAA,SAAAI,MAAA,WAII,OACAe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,gBACCH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UACdH,EAAAC,EAAAC,cAAA,SAAOuD,KAAK,WAAWxE,MAAM,OAAO4B,QAAS5C,KAAKJ,MAAM6F,eACxD1D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBATxBmD,EAAA,CAAiChD,IAAMC,WCA1BoD,EAAb,SAAA/F,GAAA,SAAA+F,IAAA,OAAA5F,OAAAC,EAAA,EAAAD,CAAAE,KAAA0F,GAAA5F,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4F,GAAAJ,MAAAtF,KAAAuF,YAAA,OAAAzF,OAAAgB,EAAA,EAAAhB,CAAA4F,EAAA/F,GAAAG,OAAAiB,EAAA,EAAAjB,CAAA4F,EAAA,EAAA9E,IAAA,SAAAI,MAAA,WAII,MAAyB,OAArBhB,KAAKJ,MAAM+F,MAEf5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8BlB,MAAM,QAAQ4B,QAAS5C,KAAKJ,MAAMgG,gBAClF7D,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAgClB,MAAM,UAAU4B,QAAS5C,KAAKJ,MAAMgG,gBACtF7D,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAgClB,MAAM,UAAU4B,QAAS5C,KAAKJ,MAAMgG,iBAEtF7D,EAAAC,EAAAC,cAAA,KAAGC,UAAW,WAAWlC,KAAKJ,MAAMY,SAAUR,KAAKJ,MAAMY,QAAQqF,gBAMrE9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAClBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kCAClBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mCAEnBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBlC,KAAKJ,MAAM+F,MAAME,oBAxBpDH,EAAA,CAA8BrD,IAAMC,WC8ErBwD,qBAzEb,SAAAA,EAAYlG,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8F,IAChBjG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgG,GAAA3F,KAAAH,KAAMJ,KACDW,MAAQ,CACXC,QAAS,QACTuF,YAAa,GACbJ,MAAO,KACPV,KAAM,IAERpF,EAAK+F,cAAgB/F,EAAK+F,cAAcvF,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACrBA,EAAK4F,aAAe5F,EAAK4F,aAAapF,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAKoE,aAAepE,EAAKoE,aAAa5D,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAKkF,iBAAmBlF,EAAKkF,iBAAiB1E,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAXRA,6EAgBJoB,GACZjB,KAAKgG,SAAS,CACZxF,QAASS,EAAM6B,OAAO9B,MACtBiE,KAAM,0CAMGhE,GACX,GAA2B,SAAvBjB,KAAKO,MAAMC,QAAoB,CACjC,IAAIyF,EAAWjG,KAAKO,MAAMwF,YAC1B/F,KAAKgG,SAAS,CACZxF,QAASyF,EACTF,YAAa,QACbJ,MAAO,WAGN,CACF,IAAIM,EAAWjG,KAAKO,MAAMC,QACzBR,KAAKgG,SAAS,CACZxF,QAAS,OACTuF,YAAaE,EACbN,MAAO,MACPV,KAAM,2CASDvE,GACXV,KAAKgG,SAAS,CACZf,KAAMvE,6CAIOF,GACf,IAAI0F,EAAY,GAAA3E,OAAMf,EAAN,eAChBa,SAAS8E,KAAKjE,UAAYgE,mCAI1B,OACEnE,EAAAC,EAAAC,cAAA,OAAKgB,GAAG,gBACNlB,EAAAC,EAAAC,cAACmE,EAAD,CAAS5F,QAASR,KAAKO,MAAMC,QAASyE,KAAMjF,KAAKO,MAAM0E,KAAMhB,aAAcjE,KAAKiE,aAAcc,iBAAkB/E,KAAK+E,mBACrHhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACoE,EAAD,CAAaZ,aAAczF,KAAKyF,eAChC1D,EAAAC,EAAAC,cAACqE,EAAD,CAAUV,cAAe5F,KAAK4F,cAAeD,MAAO3F,KAAKO,MAAMoF,MAAOnF,QAASR,KAAKO,MAAMC,mBAnElF6B,IAAMC,YCMJiE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9E,EAAAC,EAAAC,cAAC6E,EAAD,MAASzF,SAAS8B,eAAe,SD2H3C,kBAAmB4D,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6bd5da4e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class Japanese extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handlePress=this.handlePress.bind(this);\r\n    this.state={country: 'japan', drumList: [\r\n      {country: 'japan', name: 'bigTaiko', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/japanese/159[kb]big_taiko.aif.mp3', key: 'Q', keyCode:'81'},\r\n      {country: 'japan', name: 'medTaiko', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/japanese/77[kb]med_taiko.aif.mp3', key: 'W', keyCode:'87'},\r\n      {country: 'japan', name: 'cymbal', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/japanese/120[kb]nipon_cymbal_1.aif.mp3', key: 'E', keyCode:'69'},\r\n      {country: 'japan', name: 'daibyoshi', src: 'https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/Japanese%20Drums/71[kb]daibyoshi-A3.wav.mp3', key: 'A', keyCode:'65'},\r\n      {country: 'japan', name: 'woodBlock', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/japanese/30[kb]nipon_wood_block.aif.mp3', key: 'S', keyCode:'83'},\r\n      {country: 'japan', name: 'okawa', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/japanese/32[kb]ohkawa_mute.aif.mp3', key: 'D', keyCode:'68'},\r\n      {country: 'japan', name: 'taiko', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/japanese/117[kb]taiko_1.aif.mp3', key: 'Z', keyCode:'90'},\r\n      {country: 'japan', name: 'tsuzumi', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/japanese/31[kb]tsuzumi.aif.mp3', key: 'X', keyCode:'88'},\r\n      {country: 'japan', name: 'shime', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/japanese/51[kb]shime_mute.aif.mp3', key: 'C', keyCode:'67'}\r\n    ]}\r\n  }\r\n  \r\n  /*find which key was pressed and assign the appropriate audio*/\r\n  handlePress(country, event) {\r\n    const keyCodes = [81, 87, 88, 69, 65, 83, 68, 90, 88, 67];\r\n    if (keyCodes.includes(event.keyCode)) {\r\n      this.props.addPressAnimation(event);\r\n      var audio = document.querySelector(`audio[data-key=\"${event.keyCode}\"]`);\r\n      this.props.bangDrum(audio, country);\r\n  }\r\n  }\r\n  \r\n  \r\n  componentWillMount() {\r\n    document.addEventListener('keydown', this.handlePress.bind(this, this.state.country));\r\n  }\r\n\r\n  /* listen for the end of the key style transition and remove it*/\r\n  componentDidMount() {\r\n    const keys=document.querySelectorAll('.drum-key');\r\n    keys.forEach(key => key.addEventListener('transitionend', this.props.removeTransition))\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handlePress);\r\n  }\r\n\r\n  /*use the country-specific drum list in state with the createButtons\r\n  function passed in props to render drumpad keys*/\r\n  render() {\r\n    return (\r\n    <div className='japan-pad drumPad'>\r\n      {this.state.drumList.map(this.props.createButtons)}\r\n    </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport class Moroccan extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handlePress=this.handlePress.bind(this);\r\n    this.state={country: 'morocco', drumList: [\r\n      {country: 'morocco', name: 'percussion', src: 'https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/Arabic%20Percussion%20Kit%201/26[kb]arabicperc1-6.wav.mp3', key: 'Q', keyCode: '81'},\r\n      {country: 'morocco', name: 'hiss', src: 'https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/Arabic%20Percussion%20Kit%201/74[kb]arabicperc1-11.wav.mp3', key: 'W', keyCode:'87'},\r\n      {country: 'morocco', name: 'thud', src: 'https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/Arabic%20Percussion%20Kit%201/70[kb]arabicperc1.wav.mp3', key: 'E', keyCode:'69'},\r\n      {country: 'morocco', name: 'quickTap', src: 'https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/Arabic%20Percussion%20Kit%201/17[kb]arabicperc1-27.wav.mp3', key: 'A', keyCode:'65'},\r\n      {country: 'morocco', name: 'highHit', src: 'https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/Arabic%20Percussion%20Kit%203/76[kb]C1000-4.wav.mp3', key: 'S', keyCode:'83'},\r\n      {country: 'morocco', name: 'muteTap', src: 'https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/Arabic%20Percussion%20Kit%201/9[kb]arabicperc1-36.wav.mp3', key: 'D', keyCode:'68'},\r\n      {country: 'morocco', name: 'tuk', src: 'https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/Arabic%20Percussion%20Kit%201/28[kb]arabicperc1-9.wav.mp3', key: 'Z', keyCode:'90'},\r\n      {country: 'morocco', name: 'tak', src: 'https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/Arabic%20Percussion%20Kit%201/26[kb]arabicperc1-6.wav.mp3', key: 'X', keyCode:'88'},\r\n      {country: 'morocco', name: 'lowBang', src: 'https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/Arabic%20Percussion%20Kit%201/133[kb]arabicperc1-55.wav.mp3', key: 'C', keyCode:'67'}]}\r\n  }\r\n  \r\n  componentWillMount() {\r\n    document.addEventListener('keydown', this.handlePress.bind(this, this.state.country));\r\n  }\r\n\r\n  /* listen for the end of the key style transition and remove it*/ \r\n  componentDidMount() {\r\n    const keys=document.querySelectorAll('.drum-key');\r\n    keys.forEach(key => key.addEventListener('transitionend', this.props.removeTransition))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handlePress);\r\n  }\r\n\r\n  /*find which key was pressed and assign the appropriate audio*/\r\n  handlePress(country, event) {\r\n  \tconst keyCodes = [81, 87, 88, 69, 65, 83, 68, 90, 88, 67];\r\n  \tif (keyCodes.includes(event.keyCode)) {\r\n      this.props.addPressAnimation(event);\r\n    \tvar audio = document.querySelector(`audio[data-key=\"${event.keyCode}\"]`);\r\n    \tthis.props.bangDrum(audio, country);\r\n\t}\r\n  }\r\n  \r\n\r\n  /*use the country-specific drum list in state with the createButtons\r\n  function passed in props to render drumpad keys*/\r\n  render() {\r\n    return (\r\n    <div className='morocco-pad drumPad'>\r\n      {this.state.drumList.map(this.props.createButtons)}\r\n    </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport class Burundi extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handlePress = this.handlePress.bind(this);\r\n    this.state={country: 'burundi', drumList: [\r\n      {country: 'burundi', name: 'bongoLo', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/percussion%20african%20and%20eastern/23[kb]bongo%20lo.aif.mp3', key: 'Q', keyCode:'81'},\r\n      {country: 'burundi', name: 'bongoHi', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/percussion%20african%20and%20eastern/8[kb]bongo%20hi.aif.mp3', key: 'W', keyCode:'87'},\r\n      {country: 'burundi', name: 'tamboTak', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/percussion%20african%20and%20eastern/12[kb]tambo-tak.aif.mp3', key: 'E', keyCode:'69'},\r\n      {country: 'burundi', name: 'tamboDum', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/percussion%20african%20and%20eastern/14[kb]tambo-dum.aif.mp3', key: 'A', keyCode:'65'},\r\n      {country: 'burundi', name: 'tablaLo', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/percussion%20african%20and%20eastern/197[kb]lotabla.aif.mp3', key: 'S', keyCode:'83'},\r\n      {country: 'burundi', name: 'shekere', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/percussion%20african%20and%20eastern/116[kb]shekere1.aif.mp3', key: 'D', keyCode:'68'},\r\n      {country: 'burundi', name: 'waveDrum', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/percussion%20african%20and%20eastern/130[kb]wavedrum1.aif.mp3', key: 'Z', keyCode:'90'},\r\n      {country: 'burundi', name: 'solidTabla', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/percussion%20african%20and%20eastern/45[kb]solid-tabla-hit.aif.mp3', key: 'X', keyCode:'88'},\r\n      {country: 'burundi', name: 'bend', src: 'https://sampleswap.org/samples-ghost/DRUMS%20and%20SINGLE%20HITS/percussion%20african%20and%20eastern/167[kb]bendy.aif.mp3', key: 'C', keyCode:'67'}]}\r\n  }\r\n  \r\n  handlePress(country, event) {\r\n\r\n  \tconst keyCodes = [81, 87, 69, 65, 83, 68, 90, 88, 67];\r\n  \tif (keyCodes.includes(event.keyCode)) {\r\n  \t\tthis.props.addPressAnimation(event);\r\n    \tvar audio = document.querySelector(`audio[data-key=\"${event.keyCode}\"]`);\r\n    \tthis.props.bangDrum(audio, country);\r\n\t}\r\n  }\r\n  \r\n  componentWillMount() {\r\n    document.addEventListener('keydown', this.handlePress.bind(this, this.state.country));\r\n  }\r\n\r\n  /* listen for the end of the key style transition and remove it*/\r\n  componentDidMount() {\r\n    const keys=document.querySelectorAll('.drum-key');\r\n    keys.forEach(key => key.addEventListener('transitionend', this.props.removeTransition))\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handlePress);\r\n  }\r\n  \r\n  /*use the country-specific drum list in state with the createButtons\r\n  function passed in props to render drumpad keys*/\r\n  render() {\r\n    return (\r\n    <div className='burundi-pad drumPad'>\r\n     {this.state.drumList.map(this.props.createButtons)}\r\n    </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport class DrumOff extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={drumList: [\r\n      {key: 'Q'},{key: 'W'},{key: 'E'},{key: 'A'},{key: 'S'},{key: 'D'},{key: 'Z'},{key: 'X'},{key: 'C'}]}\r\n  }\r\n  \r\n  /*create dummy keypad keys*/\r\n  createButtons(drum) { return(\r\n    <button className='drum-key-off drum-key'>\r\n    {drum.key}</button>\r\n    )}\r\n  \r\n  render() {\r\n    return (\r\n    <div className='none-pad drumPad'>\r\n     {this.state.drumList.map(this.createButtons)}\r\n    </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { Japanese } from './Japanese.js';\r\nimport { Moroccan } from './Moroccan.js';\r\nimport { Burundi } from './Burundi.js';\r\nimport { DrumOff } from './DrumOff.js';\r\n\r\nexport class Display extends React.Component { \r\n  constructor(props) {\r\n    super(props);\r\n    this.createButtons = this.createButtons.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n    this.bangDrum = this.bangDrum.bind(this);\r\n    this.removeTransition = this.removeTransition.bind(this);\r\n    this.addClickAnimation = this.addClickAnimation.bind(this);\r\n    this.addPressAnimation = this.addPressAnimation.bind(this);\r\n  }\r\n  \r\n  /* removes the transition styling when called from children*/\r\n  removeTransition(event) {\r\n    event.target.classList.remove('pressed');\r\n    event.target.classList.remove('clicked');\r\n  }\r\n\r\n  /*creates drumkit keys based on drum values from child's state*/\r\n  createButtons(drum) { return(\r\n    <button className={`drum-key ${drum.country}`} value={drum.key} onClick={this.onClick.bind(this, drum.country)} id={drum.name}>\r\n    <audio id={drum.key} data-key={drum.keyCode}\r\n    src={drum.src} className='clip'/>{drum.key}</button>\r\n    )}\r\n\r\n  /*adds transition styling and gets appropriate audio when a key \r\n  is clicked*/\r\n  onClick(country, event) {\r\n    this.addClickAnimation(event);\r\n    var audio = document.getElementById(event.target.value);\r\n    this.bangDrum(audio, country);    \r\n  }\r\n  \r\n  /*play the audio passed by onClick/handlePress and set inner text to \r\n  appropriate drum name*/\r\n  bangDrum(audio, country) {\r\n    var drumKits = {burundi:{Q:'Bongo Lo', W:'Bongo Hi', E:'Tambo', A:'Tambo Dum',S:'Tabla Lo',D:'Shekere',Z:'Wave Drum',X:'Solid Tabla',C:'Bend'},japan: {Q:'Big Taiko', W:'Medium Taiko', E:'Cymbal', A:'Daibyoshi',S:'Wood Block',D:'Okawa',Z:'Taiko',X:'Tsuzumi',C:'Shime'}, morocco: {Q:'Percussion', W:'Hiss', E:'Thud', A:'Quick Tap',S:'High Hit',D:'Mute Tap',Z:'Tuk',X:'Tak',C:'Low Bang'}};\r\n    var drumKit = drumKits[country];  \r\n    this.props.setInnerText(drumKit[audio.id]);\r\n    audio.currentTime = 0;\r\n    audio.play();\r\n  }\r\n\r\n  /*add transition styling to key that was clicked*/\r\n  addClickAnimation(event) {\r\n    var key = document.querySelector(`button[value='${event.target.value}']`)\r\n    key.classList.add('clicked');\r\n  }\r\n\r\n  /*add transition styling to key that was pressed*/\r\n  addPressAnimation(event) {\r\n    let code = event.keyCode;\r\n    let keyValues = {81: 'Q', 87: 'W', 69:'E', 65:'A', 83:'S', 68:'D', 90:'Z', 88:'X', 67:'C'};\r\n    let key = document.querySelector(`button[value='${keyValues[code]}']`);\r\n    key.classList.add('pressed');\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n        this.props.changeBackground(this.props.country);\r\n        if (this.props.country === 'japan') {\r\n          return <div id=\"display\" className='left-side'>\r\n                 <Japanese addPressAnimation={this.addPressAnimation} removeTransition={this.removeTransition} setInnerText={this.setInnerText} createButtons={this.createButtons} bangDrum={this.bangDrum}/>\r\n                 <p className='drumName japan-drumName'>{this.props.text}</p></div>  \r\n        }\r\n        else if(this.props.country === 'morocco') {\r\n          return <div id=\"display\" className='left-side' >\r\n                 <Moroccan addPressAnimation={this.addPressAnimation} removeTransition={this.removeTransition} setInnerText={this.setInnerText} createButtons={this.createButtons} bangDrum={this.bangDrum}/>\r\n                 <p className='drumName morocco-drumName'>{this.props.text}</p></div>\r\n        }\r\n        else if(this.props.country === 'burundi'){\r\n          return <div id=\"display\" className='left-side' >\r\n                 <Burundi addPressAnimation={this.addPressAnimation} removeTransition={this.removeTransition} setInnerText={this.setInnerText} createButtons={this.createButtons} bangDrum={this.bangDrum}/>\r\n                 <p className='drumName burundi-drumName'>{this.props.text}</p></div>\r\n        }\r\n      else {\r\n        return <div id=\"display\" className='' ><DrumOff /><p className='drumName'>{this.props.text}</p></div>\r\n      }\r\n      \r\n  }\r\n }","import React from 'react';\r\n\r\nexport class PowerButton extends React.Component {\r\n\r\n  /*power switch executes handleToggle from props on check/un-check*/\r\n  render() {\r\n    return(\r\n    <div className='power-switch'>\r\n    <p className='label'>POWER ON/OFF</p>\r\n     <label className=\"switch\">\r\n        <input type=\"checkbox\" value='none' onClick={this.props.handleToggle}></input>\r\n        <span className=\"slider round\"></span>\r\n     </label>\r\n    </div>\r\n    )\r\n }\r\n}","import React from 'react';\r\n\r\nexport class DrumType extends React.Component{\r\n  \r\n  /*if the power is on render the active buttons, else render inactive buttons*/\r\n  render() {\r\n    if (this.props.power === 'on') {\r\n      return (\r\n    <div className='drumType'>\r\n    <div className='drumNames'>\r\n      <button className='button-country japan-button' value='japan' onClick={this.props.handleCountry}></button>\r\n      <button className='button-country burundi-button' value='burundi' onClick={this.props.handleCountry}></button>\r\n      <button className='button-country morocco-button' value='morocco' onClick={this.props.handleCountry}></button>\r\n     </div>\r\n      <p className={'display-'+this.props.country}>{this.props.country.toUpperCase()}</p>\r\n    </div>\r\n    )\r\n  } \r\n  else {\r\n    return (\r\n  <div className='drumType'>\r\n  <div className='drumNames'>\r\n      \t<button className='button-country japan-button'></button>\r\n      \t<button className='button-country burundi-button'></button>\r\n      \t<button className='button-country morocco-button'></button>\r\n      </div>\r\n      <p className='display-none'>{this.props.power.toUpperCase()}</p>\r\n    </div>\r\n  )\r\n}\r\n}\r\n}","import React from 'react';\nimport { Display } from './Components/Display.js';\nimport { PowerButton } from './Components/PowerButton.js'\nimport { DrumType } from './Components/DrumType.js'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      country: 'japan',\n      prevCountry: '', \n      power: 'on',\n      text: ''\n    }\n    this.handleCountry = this.handleCountry.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.setInnerText = this.setInnerText.bind(this);\n    this.changeBackground = this.changeBackground.bind(this);\n  } \n\n\n  /* set the country to whichever button is clicked */\n  handleCountry(event) {\n    this.setState({\n      country: event.target.value,\n      text: ''\n    })\n\n  }\n  \n  /* toggle power on/off and store the last active country in state*/\n  handleToggle(event) {\n    if (this.state.country === 'none') {\n      let previous = this.state.prevCountry;\n      this.setState({\n        country: previous,\n        prevCountry: 'japan',\n        power: 'on'\n      })\n    }\n    else {\n       let previous = this.state.country;\n        this.setState({\n          country: 'none',\n          prevCountry: previous,\n          power: 'off',\n          text: ''\n        })\n\n    }\n    \n  }\n\n\n  /*set the innertext of the drumpad to whichever drum was hit*/\n  setInnerText(name) {\n    this.setState({\n      text: name\n    })\n  }\n\n  changeBackground(country) {\n    let countryClass = `${country}-background`;\n    document.body.className = countryClass;\n  }\n\n  render() {\n    return (\n      <div id=\"drum-machine\">\n        <Display country={this.state.country} text={this.state.text} setInnerText={this.setInnerText} changeBackground={this.changeBackground} />\n        <div className='inputs'>\n          <PowerButton handleToggle={this.handleToggle} />\n          <DrumType handleCountry={this.handleCountry} power={this.state.power} country={this.state.country}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}